@page "/branch/create"
@using Commons.Models.BranchDTO
@using Commons.Models.CompanyDTO
@using MyShopSystem_UI.Service
@inject IBranchService branchService
@inject ICompanyService companyService
@inject NavigationManager navigation

<div class="card p-3 mt-3">
    <h4>Create Branch</h4>

    @if (companies == null)
    {
        <p>Loading...</p>
    }
    else
    {
        <div>
            <label>Kompaniya:</label>
            <InputSelect @bind-Value="newBranch.CompanyId" class="form-control">
                <option value="">Tanlang</option>
                @foreach (var company in companies)
                {
                    <option value="@company.Id">@company.Name</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label for="name">Name</label>
            <input id="name" class="form-control" @bind="newBranch.Name" />
        </div>
        <div class="form-group">
            <label for="location">Location</label>
            <input id="location" class="form-control" @bind="newBranch.Location" />
        </div>

        <div class="mt-3">
            <button class="btn btn-success" @onclick="CreateBranch">Save</button>
            <a class="btn btn-secondary" href="/branch">Cancel</a>
        </div>
    }
</div>

@code {
    private List<GetCompanyListDTO> companies = new(); // ✅ NullReferenceException oldini olish
    private CreateBranchDTO newBranch = new CreateBranchDTO();

    protected override async Task OnInitializedAsync()
    {
        companies = await companyService.GetAllCompany(); // ✅ To‘g‘ri service ishlatildi
    }

    private async Task CreateBranch()
    {
        var result = await branchService.CreateBranch(newBranch);
        navigation.NavigateTo("/branch");
    }
}
