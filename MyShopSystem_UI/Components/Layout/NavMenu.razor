@inject HttpClient Http
@inject NavigationManager navigation
@inject Blazored.LocalStorage.ILocalStorageService localStore


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">MyShopSystem_UI</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="products">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Maxsulotlar
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="store">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Store
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="branch">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Branch
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="company">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Company
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="delivery">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Delivery
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="order">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Order
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="user">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> User
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="warehouse">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Warehouse
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="receive">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Receive
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="send">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Send
            </NavLink>
        </div>

        @if(IsAuthencaticated)
        {
            <div class="naw-item px-3">
                <button class="naw-link btn btn-danger text-white" @onclick="Logout">Logout</button>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="bi bi-box-arrow-in-right" aria-hiddin="true"></span> Login
                </NavLink>
            </div>
            <dir class="nav-item px-3">
                <NavLink class="nav-link" href="register">
                    <span class="bi bi-person-plus-fill" aria-hidden="true"></span>Register
                </NavLink>
            </dir>
        }
    </nav>
</div>

@code{
    private bool IsAuthencaticated = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            var token = await localStore.GetItemAsStringAsync("authToken");
            IsAuthencaticated = !string.IsNullOrEmpty(token);
            if(!IsAuthencaticated)
            {
                navigation.NavigateTo("/login");
            }
        }
    }
    protected override async Task OnInitializedAsync()
    {

    }
    private async Task Logout()
    {
        await localStore.RemoveItemAsync("authToken");
        IsAuthencaticated = false;
        StateHasChanged(); // UI yangilash
        navigation.NavigateTo("/company");
    }

}

