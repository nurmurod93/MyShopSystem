@page "/warehouse"
@using Commons.Models.WarehouseDTO
@using MyShopSystem_UI.Service
@inject IWarehouseService warehouseService
@inject NavigationManager navigation

<div class="d-flex justify-content-between">
    <h3>Warehouse</h3>
    <a class="btn btn-primary" href="/warehouse/create">Create</a>
</div>

@if (warehouse == null)
{
    <p>Yuklanmoqda...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Location</th>
                <th>Branch</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var warehouses in warehouse)
            {
                <tr>
                    <td>@warehouses.Id</td>
                    <td>@warehouses.Name</td>
                    <td>@warehouses.Location</td>
                    <td>@warehouses.BranchId</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditWarehouse(warehouses.Id)">Edit</button>
                        <button class="btn btn-primary" @onclick="() => DeleteWarehouse(warehouses.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<GetWarehouseListDTO> warehouse = [];

    protected override async Task OnInitializedAsync()
    {
        warehouse = await warehouseService.GetAllWarehouse();
    }
    private void EditWarehouse(int Id)
    {
        navigation.NavigateTo($"/warehouse/edit/{Id}");
    }
    private async Task DeleteWarehouse(int Id)
    {
        await warehouseService.DeleteWarehouse(Id);
        warehouse = await warehouseService.GetAllWarehouse();
    }

}
